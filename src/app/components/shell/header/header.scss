@import 'variables';
@import 'mixins';

$button-size: 2.8rem;

.page-header {
    align-items: center;
    background-color: rgba(color(neutral-lightest), 0.98);
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
    width: 100%;
    z-index: 1;

    @include desktop {
        left: 0;
        position: absolute;
        right: 0;
        top: 0;

        a:active,
        a:focus {
            outline: none;
        }
    }

    > .meta-nav {
        order: 1;
    }

    > .nav {
        order: 2;

        @include desktop {
            height: 6rem;
            transform: translate3d(0, 0, 0);
        }
    }

    @at-root .active#{&} {
        height: 100%;
        padding-bottom: 6rem;
        padding-left: 4rem;

        > .meta-nav {
            display: flex;
            justify-content: center;
            order: 2;
            width: 100%;
        }

        > .nav {
            order: 1;
            width: 100%;
        }

        .container {
            width: 19rem;
        }
    }

    @at-root .fixed#{&} {
        > .nav {
            background-color: color(neutral-lightest);

            @include desktop {
                position: fixed;
                top: -6rem;
                transform: translate3d(0, 6rem, 0);
                transition: transform 0.3s 0.5s ease-in-out;
            }
        }
    }

    &.transparent {
        @include desktop {
            background: transparent;

            .nav {
                background-color: rgba(color(neutral-darkest), 0.2);
            }
        }
    }

    .nav-menu {
        @at-root .active#{&} {
            transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
            transition: opacity 0.3s 0.4s, transform 0.3s ease-in-out;
        }

        @at-root .active.open#{&} {
            transform: translate3d(-100rem, 0, 0);
            transition: transform 0.3s ease-in-out;

            a {
                color: color(gray);
            }

            .chevron {
                display: none;
            }

            .dropdown > a {
                font-weight: bold;
            }
        }
    }

    @at-root .active.open#{&} {
        .nav-menu-item {
            &:not(.open) {
                height: 0;
                margin: 0;
            }

            &.dropdown > a {
                display: none;
            }

            &.dropdown.open > a,
            .dropdown-menu.open {
                display: block;
                padding-left: 100rem;
            }
        }
    }

    .submenu-zone {
        display: none;
        order: 0;
        position: relative;
        width: 19rem;

        .close {
            border: 0;
            color: color(cyan);
            font-size: 1.6rem;
            font-weight: 600;
        }

        .chevron {
            fill: color(cyan);
            height: 1.33rem;
            margin-right: 1rem;
            transform: rotate(180deg);
            transform-origin: center;
            width: 0.8rem;
        }

        @at-root .active.open#{&} {
            display: block;
        }
    }

    > .skiptocontent {
        display: none;
    }

    // > .skiptocontent {
    //     a {
    //         background-color: color(primary);
    //         border-bottom-right-radius: 1rem;
    //         clip: rect(0.1rem, 0.1rem, 0.1rem, 0.1rem);
    //         color: color(neutral-lightest);
    //         height: 0.1rem;
    //         left: 0;
    //         outline: 0;
    //         position: absolute;
    //         top: 0;
    //         width: 0.1rem;
    //         z-index: 1;
    //
    //         &:focus {
    //             clip: auto;
    //             font-size: 2rem;
    //             height: auto;
    //             padding: 0.5rem 1rem;
    //             transition: top 0.1s ease-in, background 0.5s linear;
    //             width: auto;
    //         }
    //     }
    // }

    &.active {
        sticky-note {
            display: none;
        }
    }

    .expand {
        -moz-appearance: none;
        -webkit-appearance: none;
        appearance: none;
        background: transparent;
        border: 0;
        border-radius: none;
        box-shadow: none;
        cursor: pointer;
        display: inline-block;
        order: 2;
        padding: 0;
        position: absolute;
        right: 1.5rem;
        top: 2rem;
        transition: 0.3s;
        user-select: none;

        @include desktop {
            display: none;

            @at-root .sticky#{&} {
                display: block;
                margin-left: 2rem;
                order: 3;
            }
        }

        &:hover,
        &:focus,
        &:active {
            outline: none;
        }

        span {
            // create middle line
            background: color(gray);
            display: inline-block;
            height: $button-size / 7;
            position: relative;
            transition: background 0.3s 0.2s ease;
            width: $button-size;

            // create the upper and lower lines as pseudo-elements of the middle line
            &::before,
            &::after {
                background: color(gray);
                content: '';
                display: inline-block;
                height: $button-size / 7;
                left: 0;
                position: absolute;
                // set transform origin back to center
                transform-origin: 50% 50%;
                transition: top 0.3s 0.2s ease, transform 0.3s ease;
                width: $button-size;
            }

            &::before { top: $button-size / 4; }
            &::after { top: -$button-size / 4; }

            @at-root .active#{&} {
                background: transparent;
                transition: background 0.3s 0s ease;

                &::before,
                &::after {
                    top: 0;
                    transition: top 0.3s ease, transform 0.3s 0.2s ease;
                    width: $button-size;
                }

                &::before {
                    transform: rotate3d(0, 0, 1, 45deg);
                }

                &::after {
                    transform: rotate3d(0, 0, 1, -45deg);
                }
            }
        }
    }
}
