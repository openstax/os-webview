@import 'pattern-library/core/pattern-library/headers';
@import 'mixins/placeholder-selectors';

.partners .results {
    padding: 2rem 0 20rem;

    @include width-up-to($phone-max) {
        padding: 0 $normal-margin 6rem;
    }

    @include wider-than($phone-max) {
        min-height: 60rem;
    }

    >:first-child {
        @include width-up-to($phone-max) {
            margin-bottom: $normal-margin;
        }
    
        @include wider-than($phone-max) {
            margin-bottom: 3rem;
        }
    }

    h2 {
        margin: 0;
    }

    @mixin partner-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
        grid-auto-rows: minmax(min-content, 100%);
        padding: 0;

        @include width-up-to($phone-max) {
            grid-gap: 1.5rem;
            justify-content: center;
        }

        @include wider-than($phone-max) {
            grid-gap: 3rem;
            justify-content: left;
        }

        .partner-card {
            @include partner-card();
        }
    }

    @mixin partner-card {
        background-color: ui-color(white);
        border-radius: 0.3rem;
        box-shadow: $card-shadow;
        color: inherit;
        display: grid;
        grid-row-gap: 1rem;
        grid-template: 'image'  8rem
        'title'
        'tags' 1fr
        'rating';
        height: 100%;
        padding: $normal-margin;
        text-decoration: none;

        .logo {
            align-self: center;
            grid-area: image;
            justify-self: center;

            > img {
                max-height: 8rem;
                max-width: 100%;
            }
        }

        .badge {
            @include verified-badge();

            align-self: start;
            grid-area: image;
            justify-self: end;
            z-index: auto;
        }

        .resource-title {
            @include set-font(h4);

            font-weight: bold;
            grid-area: title;
            line-height: normal;
        }

        .tags,
        .stars-and-count {
            @include body-font(1.2rem);

            color: text-color(helper);
        }

        .tags {
            grid-area: tags;
        }

        .stars-and-count {
            align-items: center;
            grid-area: rating;
            display: grid;
            grid-auto-flow: column;
            grid-column-gap: 0.7rem;
            justify-content: left;

            .stars {
                color: os-color(yellow);
                font-size: 75%;
                padding-bottom: 3%;
            }
        }
    }

    .grid {
        @include partner-grid;
    }

    .boxed {
        gap: 3rem;
        padding: 0;

        @include width-up-to($phone-max) {
            gap: $normal-margin;
        }
    }

    .with-sidebar {
        h2 {
            text-align: center;
        }

        /*
            We want to make breakpoints for each possible number of cards
            on a row, from 2 to 5, such that the row with a sidebar has one
            fewer cards per row.
            first: 2 cards on top, 1 on bottom
            second: 3/2
            third: 4/3
            above: 5/4
            These values are found experimentally using the grid-template-columns
            on .grid above. If that changes, they need to be refigured.
            There is some chance that different browsers will differ.
        */
        $first-break: 68.9em * $scale-factor;
        $second-break: 91.9em * $scale-factor;
        $third-break: 114.9em * $scale-factor;

        .grid {
            @include width-between($phone-max, $first-break) {
                grid-template-columns: repeat(auto-fill, minmax(calc(100%), 1fr));
            }
            @include width-between($first-break, $second-break) {
                grid-template-columns: repeat(auto-fill, minmax(calc(50% - 1.5rem), 1fr));
            }
            @include width-between($second-break, $third-break) {
                grid-template-columns: repeat(auto-fill, minmax(calc(33.3% - 3rem), 1fr));
            }
            @include wider-than($third-break) {
                grid-template-columns: repeat(auto-fill, minmax(calc(25% - 4.5rem), 1fr));
            }
        }

        @include width-up-to($phone-max) {
            > .boxed {
                padding: 0;
            }

            &,
            .sidebar-content {
                display: flex;
                flex-direction: column;
                gap: $normal-margin;

                ul {
                    @include partner-grid();
                }

                li > a {
                    @include partner-card();
                }
            }
        }

        @include wider-than($phone-max) {
            display: flex;
            flex-direction: row;
            gap: 3rem;
            max-width: 120rem;
            margin: 0 auto 3rem;

            .grid {
                max-width: unset;
            }
    
            > .sidebar {
                border: thin solid black;
                height: max-content;

                .sidebar-content {
                    background-color: ui-color(white);

                    ul {
                        padding: 0;
                        margin: 0;

                        li {
                            border-bottom: thin solid ui-color(form-border);
                        }
                    }
                }

                h2 {
                    @include set-font(h3);

                    background-color: os-color(gray);
                    color: ui-color(white);
                    padding: $normal-margin;
                }

                .grid {
                    gap: 0.2rem;
                    grid-template-columns: 100%;
                }

                .card {
                    border-radius: 0;
                    box-shadow: none;
                    border-bottom: thin solid ui-color(form-border);
                }
            }
        }
        > .sidebar {
            @include width-between($phone-max, $first-break) {
                min-width: calc(50% - 1.5rem);
                max-width: calc(50% - 1.5rem);
            }
            @include width-between($first-break, $second-break) {
                min-width: calc(33.3% - 3rem);
                max-width: calc(33.3% - 3rem);
            }
            @include wider-than($second-break) {
                min-width: calc(25% - 4.5rem);
                max-width: calc(25% + 1.5rem);
            }
        }
    }
}
